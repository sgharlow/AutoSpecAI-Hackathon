{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(python -m pytest test_ingest.py -v)",
      "Bash(python:*)",
      "Bash(pip3 install:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(chmod:*)",
      "Bash(find:*)",
      "Bash(aws:*)",
      "Bash(export:*)",
      "Bash(AWS_CA_BUNDLE=\"\" aws sts get-caller-identity)",
      "Bash(AWS_CA_BUNDLE=\"\" aws bedrock list-foundation-models --region us-east-1 --query 'modelSummaries[?starts_with(modelId, `anthropic.claude-3-sonnet`)].{ModelId:modelId,Status:modelLifecycle.status}' --output table)",
      "Bash(AWS_CA_BUNDLE=\"\" aws bedrock-runtime invoke-model --model-id anthropic.claude-3-sonnet-20240229-v1:0 --body '{\"\"anthropic_version\"\":\"\"bedrock-2023-05-31\"\",\"\"max_tokens\"\":10,\"\"messages\"\":[{\"\"role\"\":\"\"user\"\",\"\"content\"\":\"\"Test\"\"}]}' --cli-binary-format raw-in-base64-out /tmp/bedrock_test.json)",
      "Bash(AWS_CA_BUNDLE=\"\" aws ses verify-email-identity --email-address ai.autospec@gmail.com)",
      "Bash(AWS_CA_BUNDLE=\"\" aws ses get-identity-verification-attributes --identities ai.autospec@gmail.com --query 'VerificationAttributes.\"\"ai.autospec@gmail.com\"\".VerificationStatus' --output text)",
      "Bash(ls:*)",
      "Bash(AWS_CA_BUNDLE=\"\" ./deploy.sh dev)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(AWS_CA_BUNDLE=\"\" npx cdk synth)",
      "Bash(ENVIRONMENT=dev AWS_CA_BUNDLE=\"\" npx cdk synth)",
      "Bash(ENVIRONMENT=dev AWS_CA_BUNDLE=\"\" npx cdk synth --app \"node app.js\")",
      "Bash(ENVIRONMENT=dev AWS_CA_BUNDLE=\"\" node app.js)",
      "Bash(ENVIRONMENT=dev AWS_CA_BUNDLE=\"\" npx cdk synth --quiet)",
      "Bash(ENVIRONMENT=dev AWS_CA_BUNDLE=\"\" npx cdk deploy --require-approval never)",
      "Bash(AWS_CA_BUNDLE=\"\" aws cloudformation describe-stacks --stack-name AutoSpecAIStack-dev --query 'Stacks[0].StackStatus' --output text)",
      "Bash(AWS_CA_BUNDLE=\"\" aws cloudformation describe-stacks --stack-name AutoSpecAIStack-dev --query 'Stacks[0].Outputs' --output table)",
      "Bash(API_URL=\"https://p7j2dfwgwi.execute-api.us-east-1.amazonaws.com/prod\")",
      "Bash(curl:*)",
      "Bash(AWS_CA_BUNDLE=\"\" aws logs tail \"/aws/lambda/AutoSpecAI-IngestFunction\" --since 5m --follow=false 2 > /dev/null)",
      "Bash(AWS_CA_BUNDLE=\"\" aws logs describe-log-groups --log-group-name-prefix \"/aws/lambda/AutoSpecAI\" --query 'logGroups[].logGroupName' --output table 2>/dev/null)",
      "Bash(AWS_CA_BUNDLE=\"\" aws lambda list-functions --query 'Functions[?starts_with(FunctionName, `AutoSpecAI`)].{Name:FunctionName,State:State,LastModified:LastModified}' --output table 2>/dev/null)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(AWS_CA_BUNDLE=\"\" aws logs describe-log-streams --log-group-name \"/aws/lambda/AutoSpecAI-IngestFunction\" --order-by LastEventTime --descending --limit 1 --query 'logStreams[0].logStreamName' --output text 2>/dev/null)",
      "Bash(AWS_CA_BUNDLE=\"\" aws dynamodb scan )",
      "Bash(--table-name autospec-ai-history )",
      "Bash(--limit 5 )",
      "Bash(--query 'Items[].{RequestId:requestId.S,Filename:filename.S,Status:status.S,Timestamp:timestamp.S}' )",
      "Bash(--output table)",
      "Bash(AWS_CA_BUNDLE=\"\" aws dynamodb describe-table )",
      "Bash(--table-name autospec-ai-history )",
      "Bash(--query 'Table.{TableName:TableName,KeySchema:KeySchema,AttributeDefinitions:AttributeDefinitions,TableStatus:TableStatus}' )",
      "Bash(--output json)",
      "Bash(AWS_CA_BUNDLE=\"\" aws dynamodb put-item )",
      "Bash(--table-name autospec-ai-history )",
      "Bash(--item '{\n    \"\"requestId\"\": {\"\"S\"\": \"\"manual-test-123\"\"},\n    \"\"timestamp\"\": {\"\"S\"\": \"\"2025-06-26T04:30:00Z\"\"},\n    \"\"senderEmail\"\": {\"\"S\"\": \"\"test@example.com\"\"},\n    \"\"sourceType\"\": {\"\"S\"\": \"\"manual\"\"},\n    \"\"filename\"\": {\"\"S\"\": \"\"test.txt\"\"},\n    \"\"fileType\"\": {\"\"S\"\": \"\"txt\"\"},\n    \"\"s3Key\"\": {\"\"S\"\": \"\"uploads/manual-test-123/test.txt\"\"},\n    \"\"fileSize\"\": {\"\"N\"\": \"\"100\"\"},\n    \"\"status\"\": {\"\"S\"\": \"\"uploaded\"\"},\n    \"\"processingStage\"\": {\"\"S\"\": \"\"ingestion_complete\"\"}\n  }')",
      "Bash(npm run deploy:*)",
      "Bash(--function-name \"AutoSpecAIStack-dev-IngestFunction\" )",
      "Bash(--payload file:///tmp/test_payload.json )",
      "Bash(/tmp/lambda_response.json)",
      "Bash(echo:*)",
      "Bash(AWS_CLI_S3_SSL_VERIFY=false aws sts get-caller-identity)",
      "Bash(timeout 60s npm run deploy)",
      "Bash(timeout:*)",
      "Bash(npx cdk deploy:*)",
      "Bash(npm run build:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(cat:*)",
      "Bash(rm:*)",
      "Bash(touch:*)",
      "Bash(cdk bootstrap:*)",
      "Bash(./scripts/deploy.sh:*)",
      "Bash(true)",
      "Bash(./deploy.sh:*)",
      "Bash(env)",
      "Bash(./scripts/validate-deployment.sh:*)",
      "Bash(npm run synth:*)",
      "Bash(cdk list:*)",
      "Bash(./scripts/setup-monitoring-and-alerts.sh:*)",
      "Bash(./scripts/deploy-with-provisioned-concurrency.sh:*)",
      "Bash(AWS_CA_BUNDLE=\"\" aws apigateway get-usage-plans --region us-east-1 --query 'items[?contains(name, `AutoSpec`)].{id:id,name:name}' --output table)",
      "Bash(AWS_CA_BUNDLE=\"\" aws apigateway get-usage-plan-keys --usage-plan-id \"oli69b\" --region us-east-1 --output json)",
      "Bash(AWS_CA_BUNDLE=\"\" aws dynamodb scan --table-name \"autospec-ai-api-keys-prod\" --region us-east-1 --output json)",
      "Bash(AWS_CA_BUNDLE=\"\" python3 scripts/populate-api-keys.py)",
      "Bash(powershell.exe:*)",
      "Bash(AWS_CA_BUNDLE=\"\" aws ses get-account-sending-enabled --region us-east-1)",
      "Bash(AWS_CA_BUNDLE=\"\" aws ses get-send-quota --region us-east-1)",
      "Bash(AWS_CA_BUNDLE=\"\" aws ses describe-configuration-set --configuration-set-name autospec-ai-prod --region us-east-1)",
      "Bash(AWS_CA_BUNDLE=\"\" aws logs tail \"/aws/lambda/AutoSpecAI-ApiFunction-prod\" --since 5m --region us-east-1)",
      "Bash(AWS_CA_BUNDLE=\"\" aws logs tail \"/aws/lambda/AutoSpecAI-IngestFunction-v2-prod\" --since 5m --region us-east-1)",
      "Bash(AWS_CA_BUNDLE=\"\" aws lambda update-function-code --function-name \"AutoSpecAI-IngestFunction-v2-prod\" --zip-file \"fileb://ingest.zip\" --region us-east-1)",
      "Bash(zip:*)",
      "Bash(for func in api ingest process format slack monitoring)",
      "Bash(do echo \"Cleaning $func...\")",
      "Bash(done)",
      "Bash(for func in advanced-processing ai-comparison)",
      "Bash(do echo \"Cleaning duplicate libs in $func...\")",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(./test-upload.sh:*)",
      "Bash(./enhanced-upload.sh:*)",
      "Bash(./deploy-s3-upload.sh:*)",
      "Bash(update-ca-certificates:*)",
      "Bash(sudo update-ca-certificates:*)",
      "Bash(npm cache clean:*)",
      "Bash(npm config set:*)",
      "Bash(pkill:*)",
      "Bash(sed:*)"
    ],
    "deny": []
  }
}